[16] Log opened at 2018-09-29 06:28:34
[16] I: Connecting to configured address/port: 10.254.254.254:9100.
[16] I: Connected to client. :-)
[16] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="16" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[16]
[16] <- feature_set -i 1 -n show_hidden -v 1
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>
[16]
[16] <- feature_set -i 2 -n max_depth -v 1
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>
[16]
[16] <- feature_set -i 3 -n max_children -v 100
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>
[16]
[16] <- feature_set -i 4 -n extended_properties -v 1
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>
[16]
[16] <- feature_set -i 5 -n notify_ok -v 1
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>
[16]
[16] <- stdout -i 6 -c 1
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="6" success="1"></response>
[16]
[16] <- status -i 7
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="7" status="starting" reason="ok"></response>
[16]
[16] <- step_into -i 8
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="8" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/public/index.php" lineno="10"></xdebug:message></response>
[16]
[16] <- breakpoint_set -i 9 -t line -f file:///var/www/html/admin/app/Http/Controllers/MinorCourses/CourseLessonController.php -n 86
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="9" id="160002"></response>
[16]
[16] <- stack_get -i 10
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="10"><stack where="{main}" level="0" type="file" filename="file:///var/www/html/admin/public/index.php" lineno="10"></stack></response>
[16]
[16] <- run -i 11
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="11" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/app/Http/Controllers/MinorCourses/CourseLessonController.php" lineno="86"></xdebug:message></response>
[16]
[15] Log opened at 2018-09-29 06:29:18
[15] I: Connecting to configured address/port: 10.254.254.254:9100.
[15] I: Connected to client. :-)
[15] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="15" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[15]
[23] Log opened at 2018-09-29 06:29:58
[23] I: Connecting to configured address/port: 10.254.254.254:9100.
[23] I: Connected to client. :-)
[23] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="23" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[23]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvNy4yLjg=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIHByaXZhdGU=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[RGF0ZTogU2F0LCAyOSBTZXAgMjAxOCAwNjozNTowNyBHTVQ=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogWFNSRi1UT0tFTj1leUpwZGlJNklrZzFSRU5rYld0S1NtWnhlVE5TYTNwMlZHRktZV2M5UFNJc0luWmhiSFZsSWpvaVRHcERYQzlJVjBkUVZVNUNhazFTZUdOS1NTdE5lRWhwYzNSVlpYWmhhV2cwV1haYVNHaGhXVVpJWWpZeGVqTkZkbGdyWEM4eWRWSmxSRzByVm5jemRFRjFiVVpQVEhCamNVMVJWRkZMUTJSUFYydExTMFJXUVQwOUlpd2liV0ZqSWpvaU1qQTNabVF5WkRKbU56SXdObU5pTmpVNFpqRXpNbVF5WXpnM01URm1NalJrWkRjME5EUTBObU00WmpKbVlqYzJNall4WWpoallXUXlOR1F3TURkaU9TSjk7IGV4cGlyZXM9U2F0LCAyOS1TZXAtMjAxOCAwODozNTowNyBHTVQ7IE1heC1BZ2U9NzIwMDsgcGF0aD0v]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogdmlweF9zZXNzaW9uPWV5SnBkaUk2SW5Bd1VrWTVlV3BjTDFVMFMxTm1LMHhQVkdOYVJUZDNQVDBpTENKMllXeDFaU0k2SW1kd01qaE9aRTFGZEVSeVhDOTZWM0VyVFhOR2JVaHVZMVJHWEM5cFIxaEpkRGhvVFVocFNIWTRPVXh1ZDBrd1VFRmFZazlEZVZObmVIVlBjbVUwVmtWdVZUZEdPSHBNU0VKSFdXZEZWMWxFTkhsb2IxUkVVV2M5UFNJc0ltMWhZeUk2SWpRMk9XSTBZemMwTWpGaVltRXdaVFE0WVRZM05qZ3lOelJoTWpFME9XUTBOMlJqT1RBeFptRTRNV1JqTkRBMk5XTmhNbU13TWpBelkySTJOVEUxTXpJaWZRJTNEJTNEOyBleHBpcmVzPVNhdCwgMjktU2VwLTIwMTggMDg6MzU6MDcgR01UOyBNYXgtQWdlPTcyMDA7IHBhdGg9LzsgaHR0cG9ubHk=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>
[16]
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" status="stopping" reason="ok"></response>
[16]
[16] Log closed at 2018-09-29 06:35:07
[16]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvNy4yLjg=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIHByaXZhdGU=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[RGF0ZTogU2F0LCAyOSBTZXAgMjAxOCAwNjozNTowOSBHTVQ=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogWFNSRi1UT0tFTj1leUpwZGlJNklrdExXRlp1Y2xwS1JqQndVMk00WVhkeVNtVTNZa0U5UFNJc0luWmhiSFZsSWpvaVMweFpjM2xRYlZWbGQzVk5OMDlPZUd4amJVRjBRMFpLZUhwNGNXUm1UME5SVVdjNFluSlpSRzVoTjF3dlYzQnZhWEpxTVd0RE1VWnZiRVpXVUc5M1ZqUjJhbVpSTVU5VmFEa3lhV1UyWW5WRVMwTnNTMlZuUFQwaUxDSnRZV01pT2lJMllURm1aREV4TW1Vd01qUTJORFV4TTJKallqa3habUptTjJJMVpEVmpaV0ZoTXpsa05qSXpOekZrWVRjd01EZzNaakkwT0RSaFpERmpaakpsTVRVeEluMCUzRDsgZXhwaXJlcz1TYXQsIDI5LVNlcC0yMDE4IDA4OjM1OjA5IEdNVDsgTWF4LUFnZT03MjAwOyBwYXRoPS8=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogdmlweF9zZXNzaW9uPWV5SnBkaUk2SWpsMlEzcFVhVzV1TlROQ1JHaE1Ra2t4V25OQmVXYzlQU0lzSW5aaGJIVmxJam9pUzNrM00xZHdjVzFQT0hWT2JuRnNjR2w2ZG5oNE5HOTVTR3RhTTJOU1JXeFlkMWc1UlhoeVUybFZOR0ZvSzJ0SGVFaDROekkzZDJKeFdWTmFaRGxZTW5wRVZGQlVkRUpNVkV4UFNHVnFNVnBjTDJWRGFrVlJQVDBpTENKdFlXTWlPaUptTURjMFpUaGxNalkzWlRBNE1XWTJPREZrTXpsaE9UYzJNRE0zTkRjek5EZGpNVGt6Tmpnek9XUmlObU13WW1Nek56ZzVOVEZpTXpsbE9HVXlZakl3SW4wJTNEOyBleHBpcmVzPVNhdCwgMjktU2VwLTIwMTggMDg6MzU6MDkgR01UOyBNYXgtQWdlPTcyMDA7IHBhdGg9LzsgaHR0cG9ubHk=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[15]
[15] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>
[15]
[15] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" status="stopping" reason="ok"></response>
[15]
[15] Log closed at 2018-09-29 06:35:09
[15]
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" status="stopping" reason="ok"></response>
[23]
[23] Log closed at 2018-09-29 06:35:09
[23]
[24] Log opened at 2018-09-29 06:40:13
[24] I: Connecting to configured address/port: 10.254.254.254:9100.
[24] I: Connected to client. :-)
[24] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="24" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[24]
[24] <- feature_set -i 1 -n show_hidden -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>
[24]
[24] <- feature_set -i 2 -n max_depth -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>
[24]
[24] <- feature_set -i 3 -n max_children -v 100
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>
[24]
[24] <- feature_set -i 4 -n extended_properties -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>
[24]
[24] <- feature_set -i 5 -n notify_ok -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>
[24]
[24] <- stdout -i 6 -c 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="6" success="1"></response>
[24]
[24] <- status -i 7
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="7" status="starting" reason="ok"></response>
[24]
[24] <- step_into -i 8
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="8" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/public/index.php" lineno="10"></xdebug:message></response>
[24]
[24] <- breakpoint_set -i 9 -t line -f file:///var/www/html/admin/app/Http/Controllers/MinorCourses/CourseLessonController.php -n 86
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="9" id="240001"></response>
[24]
[24] <- stack_get -i 10
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="10"><stack where="{main}" level="0" type="file" filename="file:///var/www/html/admin/public/index.php" lineno="10"></stack></response>
[24]
[24] <- run -i 11
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="11" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/app/Http/Controllers/MinorCourses/CourseLessonController.php" lineno="86"></xdebug:message></response>
[24]
[16] Log opened at 2018-09-29 06:40:28
[16] I: Connecting to configured address/port: 10.254.254.254:9100.
[16] I: Connected to client. :-)
[16] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="16" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[16]
[23] Log opened at 2018-09-29 06:40:32
[23] I: Connecting to configured address/port: 10.254.254.254:9100.
[23] I: Connected to client. :-)
[23] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="23" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[23]
[25] Log opened at 2018-09-29 06:40:36
[25] I: Connecting to configured address/port: 10.254.254.254:9100.
[25] I: Connected to client. :-)
[25] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="25" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[25]
[16] <- feature_set -i 1 -n show_hidden -v 1
[23] <- feature_set -i 1 -n show_hidden -v 1
[24] <- stop -i 12
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>
[16]
[25] <- feature_set -i 1 -n show_hidden -v 1
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>
[25]
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>
[23]
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stop" transaction_id="12" status="stopped" reason="ok"></response>
[24]
[16] <- feature_set -i 2 -n max_depth -v 1
[25] <- feature_set -i 2 -n max_depth -v 1
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>
[25]
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>
[16]
[25] <- feature_set -i 3 -n max_children -v 100
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>
[25]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvNy4yLjg=]]></stream>
[24]
[23] <- feature_set -i 2 -n max_depth -v 1
[16] <- feature_set -i 3 -n max_children -v 100
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>
[16]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[24]
[25] <- feature_set -i 4 -n extended_properties -v 1
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>
[25]
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>
[23]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC10eXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>
[24]
[16] <- feature_set -i 4 -n extended_properties -v 1
[23] <- feature_set -i 3 -n max_children -v 100
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>
[23]
[25] <- status -i 5
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="5" status="starting" reason="ok"></response>
[25]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[24]
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>
[16]
[23] <- feature_set -i 4 -n extended_properties -v 1
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[24]
[25] <- step_into -i 6
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>
[23]
[16] <- status -i 5
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="6" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/public/index.php" lineno="10"></xdebug:message></response>
[25]
[23] <- status -i 5
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stop" transaction_id="12" status="stopping" reason="ok"></response>
[24]
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="5" status="starting" reason="ok"></response>
[16]
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="5" status="starting" reason="ok"></response>
[23]
[25] <- run -i 7
[16] <- step_into -i 6
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="6" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/public/index.php" lineno="10"></xdebug:message></response>
[16]
[23] <- step_into -i 6
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="6" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/public/index.php" lineno="10"></xdebug:message></response>
[23]
[16] <- run -i 7
[23] <- run -i 7
[24] Log closed at 2018-09-29 06:40:45
[24]
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="7" status="stopping" reason="ok"></response>
[25]
[25] <- stop -i 8
[25] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stop" transaction_id="8" status="stopped" reason="ok"></response>
[25]
[25] Log closed at 2018-09-29 06:40:46
[25]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvNy4yLjg=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIHByaXZhdGU=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[RGF0ZTogU2F0LCAyOSBTZXAgMjAxOCAwNjo0MDo0NiBHTVQ=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogWFNSRi1UT0tFTj1leUpwZGlJNkltdGtPVU53UVRJMVRWaElaV3ByWEM5S05XNWlZMFZuUFQwaUxDSjJZV3gxWlNJNkluVkxWVzlpZEdOdlJrZEdlRkphVUVSNE9FRjZWRGhDYW5wdmFscHNVVmhQY1hocWREQXJlRXRhZVZOeWExZDBWMUpUZFdscFoyaHhabVYyYjJWRVlUWlZSSFEzZVdwdlNHUllUVzkxUld4YWIwWmxaRnd2WnowOUlpd2liV0ZqSWpvaU1UVm1OR1EwTldWalpEWTVZV1UyTVdReU9EazBPREEyT1ROaVpqRXhORFpoT0RkalpXUTJOR001TjJabE5EWm1aakl6TVdGaU16QXpNREk0WlRFNU1TSjk7IGV4cGlyZXM9U2F0LCAyOS1TZXAtMjAxOCAwODo0MDo0NiBHTVQ7IE1heC1BZ2U9NzE5OTsgcGF0aD0v]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogdmlweF9zZXNzaW9uPWV5SnBkaUk2SW5oUVZXRjNRbXB5Um0xMFpHVkpkbkJJVG1saWRXYzlQU0lzSW5aaGJIVmxJam9pU1VjMmRFOWNMMXd2WXpaUlN5dGhRMWwyUW1WVFRVbGlURkJzY1c5eFVFdHNjazE0U201UFVrWjJNamd6V1VSc2RYbFFhVnBFU1hWSFhDOXZYQzlMUldwTVVGSTVRM1YwU0c5Sk5GRTJPRUk1WVhoWk5WWlBXbUpuUFQwaUxDSnRZV01pT2lKaU5qTXpOV1UyTXpJMU1qUmxNbVUyTWpKak5UQmlNekF5WVdJek5XTTVPRGczWW1GbE5tTTFOVFZsWVRZM05UWTBZVEJtWWpsbFlqTmpZVEptWVdVNUluMCUzRDsgZXhwaXJlcz1TYXQsIDI5LVNlcC0yMDE4IDA4OjQwOjQ2IEdNVDsgTWF4LUFnZT03MTk5OyBwYXRoPS87IGh0dHBvbmx5]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[16]
[16] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>
[16]
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="7" status="stopping" reason="ok"></response>
[16]
[16] <- stop -i 8
[16] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stop" transaction_id="8" status="stopped" reason="ok"></response>
[16]
[16] Log closed at 2018-09-29 06:40:47
[16]
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="7" status="stopping" reason="ok"></response>
[23]
[23] <- stop -i 8
[23] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stop" transaction_id="8" status="stopped" reason="ok"></response>
[23]
[23] Log closed at 2018-09-29 06:40:47
[23]
[26] Log opened at 2018-09-29 06:52:54
[26] I: Connecting to configured address/port: 10.254.254.254:9100.
[26] I: Connected to client. :-)
[26] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="26" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[26]
[26] <- feature_set -i 1 -n show_hidden -v 1
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>
[26]
[26] <- feature_set -i 2 -n max_depth -v 1
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>
[26]
[26] <- feature_set -i 3 -n max_children -v 100
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>
[26]
[26] <- feature_set -i 4 -n extended_properties -v 1
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>
[26]
[26] <- feature_set -i 5 -n notify_ok -v 1
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>
[26]
[26] <- stdout -i 6 -c 1
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="6" success="1"></response>
[26]
[26] <- status -i 7
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="7" status="starting" reason="ok"></response>
[26]
[26] <- step_into -i 8
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="8" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/public/index.php" lineno="10"></xdebug:message></response>
[26]
[26] <- eval -i 9 -- aXNzZXQoJF9TRVJWRVJbJ1BIUF9JREVfQ09ORklHJ10p
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="9"><property type="bool"><![CDATA[0]]></property></response>
[26]
[26] <- eval -i 10 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="10"><property type="bool"><![CDATA[1]]></property></response>
[26]
[26] <- eval -i 11 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="11"><property type="string" size="13" encoding="base64"><![CDATA[YWRtaW4udmlweC5kZQ==]]></property></response>
[26]
[26] <- eval -i 12 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9QT1JUJ10p
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="12"><property type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property></response>
[26]
[26] <- eval -i 13 -- KHN0cmluZykoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10p
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="13"><property type="string" size="1" encoding="base64"><![CDATA[Lw==]]></property></response>
[26]
[26] <- stack_get -i 14
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="14"><stack where="{main}" level="0" type="file" filename="file:///var/www/html/admin/public/index.php" lineno="10"></stack></response>
[26]
[26] <- run -i 15
[26] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvNy4yLjg=]]></stream>
[26]
[26] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[26]
[26] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC10eXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>
[26]
[26] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[26]
[26] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[26]
[26] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>
[26]
[26] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>
[26]
[26] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="15" status="stopping" reason="ok"></response>
[26]
[26] <- run -i 16
[26] Log closed at 2018-09-29 06:52:56
[26]
[24] Log opened at 2018-09-29 06:59:26
[24] I: Connecting to configured address/port: 10.254.254.254:9100.
[24] I: Connected to client. :-)
[24] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/html/admin/public/index.php" language="PHP" xdebug:language_version="7.2.8" protocol_version="1.0" appid="24" idekey="PHPSTORM"><engine version="2.7.0beta1"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2018 by Derick Rethans]]></copyright></init>
[24]
[24] <- feature_set -i 1 -n show_hidden -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>
[24]
[24] <- feature_set -i 2 -n max_depth -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>
[24]
[24] <- feature_set -i 3 -n max_children -v 100
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>
[24]
[24] <- feature_set -i 4 -n extended_properties -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>
[24]
[24] <- feature_set -i 5 -n notify_ok -v 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>
[24]
[24] <- stdout -i 6 -c 1
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="6" success="1"></response>
[24]
[24] <- status -i 7
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="7" status="starting" reason="ok"></response>
[24]
[24] <- step_into -i 8
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="8" status="break" reason="ok"><xdebug:message filename="file:///var/www/html/admin/public/index.php" lineno="10"></xdebug:message></response>
[24]
[24] <- eval -i 9 -- aXNzZXQoJF9TRVJWRVJbJ1BIUF9JREVfQ09ORklHJ10p
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="9"><property type="bool"><![CDATA[0]]></property></response>
[24]
[24] <- eval -i 10 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="10"><property type="bool"><![CDATA[1]]></property></response>
[24]
[24] <- eval -i 11 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="11"><property type="string" size="13" encoding="base64"><![CDATA[YWRtaW4udmlweC5kZQ==]]></property></response>
[24]
[24] <- eval -i 12 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9QT1JUJ10p
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="12"><property type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property></response>
[24]
[24] <- eval -i 13 -- KHN0cmluZykoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10p
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="13"><property type="string" size="1" encoding="base64"><![CDATA[Lw==]]></property></response>
[24]
[24] <- stack_get -i 14
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="14"><stack where="{main}" level="0" type="file" filename="file:///var/www/html/admin/public/index.php" lineno="10"></stack></response>
[24]
[24] <- run -i 15
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvNy4yLjg=]]></stream>
[24]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[24]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC10eXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>
[24]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[24]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>
[24]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>
[24]
[24] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>
[24]
[24] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="15" status="stopping" reason="ok"></response>
[24]
[24] <- run -i 16
[24] Log closed at 2018-09-29 06:59:35
[24]
